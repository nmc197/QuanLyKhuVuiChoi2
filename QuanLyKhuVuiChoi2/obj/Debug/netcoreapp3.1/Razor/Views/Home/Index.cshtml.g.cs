#pragma checksum "C:\Users\Cuong\source\repos\QuanLyKhuVuiChoi2\QuanLyKhuVuiChoi2\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b3f83800b8cf71f1d2de72b49c69435e2786840b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Cuong\source\repos\QuanLyKhuVuiChoi2\QuanLyKhuVuiChoi2\Views\_ViewImports.cshtml"
using QuanLyKhuVuiChoi2;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Cuong\source\repos\QuanLyKhuVuiChoi2\QuanLyKhuVuiChoi2\Views\_ViewImports.cshtml"
using QuanLyKhuVuiChoi2.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3f83800b8cf71f1d2de72b49c69435e2786840b", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3164853698e7e3e62ca90b3d8bc8904987a482c1", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "POST", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onsubmit", new global::Microsoft.AspNetCore.Html.HtmlString("updateItem(updatingItemID); return false;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.SingleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("role", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Cuong\source\repos\QuanLyKhuVuiChoi2\QuanLyKhuVuiChoi2\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Trang chủ";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b3f83800b8cf71f1d2de72b49c69435e2786840b4968", async() => {
                WriteLiteral(@"
    <header>
        <nav class=""navbar navbar-default"" role=""navigation"">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class=""navbar-header"">
                <button type=""button"" class=""navbar-toggle"" data-toggle=""collapse"" data-target="".navbar-ex1-collapse"">
                    <span class=""sr-only"">Toggle navigation</span>
                    <span class=""icon-bar""></span>
                    <span class=""icon-bar""></span>
                    <span class=""icon-bar""></span>
                </button>
                <a class=""navbar-brand"" href=""#""><img class=""imagePage"" src=""https://tiniworld.com/wp-content/uploads/2017/10/logotini.png"" /></a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class=""collapse navbar-collapse navbar-ex1-collapse"">
                <ul class=""nav navbar-nav"">
                    <li role=""presentation""><a href=""#home"" aria-controls=""home"" role=");
                WriteLiteral(@"""tab"" data-toggle=""tab"">Khu vui chơi</a></li>
                    <li role=""presentation"">
                        <a href=""#tab"" aria-controls=""tab"" role=""tab"" data-toggle=""tab"">Nhân viên</a>
                    </li>
                    <li><a href=""#"">Trò chơi</a></li>
                    <li><a href=""#"">Dịch vụ</a></li>

                </ul>
                <ul class=""nav navbar-nav navbar-right"">
                    <li class=""dropdown"">
                        <a href=""#"" class=""dropdown-toggle"" data-toggle=""dropdown"">Đăng nhập <b class=""caret""></b></a>
                        <ul class=""dropdown-menu"">
                            <li><a href=""#"">Action</a></li>
                            <li><a href=""#"">Another action</a></li>
                            <li><a href=""#"">Something else here</a></li>
                            <li><a href=""#"">Separated link</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
            <!-- /.n");
                WriteLiteral(@"avbar-collapse -->
        </nav>


    </header>
    <div class=""bodypage"">
        <div class=""info"">
            <div role=""tabpanel"" class=""parrent-tab"">
                <!-- Tab panes -->
                <div class=""tab-content"">
                    <div role=""tabpanel"" class=""tab-pane active"" id=""home"">
                        <div class=""title"">
                            <h1>Danh sách khu vui chơi</h1>
                            <button type=""button"" class=""btn btn-success"" data-toggle=""modal"" data-target=""#modal-id"">Tạo mới</button>

                        </div>
                        <table id=""tableData"" class=""display"" style=""width:100%"">
                            <thead>
                                <tr>
                                    <th>STT</th>
                                    <th>Mã khu</th>
                                    <th>Tên khu</th>
                                    <th>Giá trẻ em</th>
                                    <th>Giá người lớn<");
                WriteLiteral("/th>\r\n                                    <th></th>\r\n                                    <th></th>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n");
                WriteLiteral(@"                            </tbody>
                        </table>
                    </div>
                    <div role=""tabpanel"" class=""tab-pane"" id=""tab"">...</div>
                </div>

                <div class=""modal fade"" id=""modal-id"" role=""dialog"">
                    <div class=""modal-dialog"">

                        <!-- Modal content-->
                        <div class=""modal-content"">
                            <div class=""modal-header"">
                                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
");
                WriteLiteral("                            </div>\r\n                            <div class=\"modal-body\">\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b3f83800b8cf71f1d2de72b49c69435e2786840b9554", async() => {
                    WriteLiteral("\r\n                                    <div class=\"form-group col-sm-6\">\r\n                                        <label");
                    BeginWriteAttribute("for", " for=\"", 5186, "\"", 5192, 0);
                    EndWriteAttribute();
                    WriteLiteral(">Mã khu</label>\r\n                                        <input type=\"text\" class=\"form-control input-id\"\r\n                                               id=\"maKhu\"");
                    BeginWriteAttribute("placeholder", "\r\n                                               placeholder=\"", 5357, "\"", 5419, 0);
                    EndWriteAttribute();
                    WriteLiteral(">\r\n                                    </div>\r\n                                    <div class=\'form-group col-sm-6\'>\r\n                                        <label");
                    BeginWriteAttribute("class", " class=\'", 5584, "\'", 5592, 0);
                    EndWriteAttribute();
                    WriteLiteral(">MãNVQL</label>\r\n                                        <input type=\"text\" class=\"form-control input-id\"\r\n                                               id=\"maNVQL\"");
                    BeginWriteAttribute("placeholder", "\r\n                                               placeholder=\"", 5758, "\"", 5820, 0);
                    EndWriteAttribute();
                    WriteLiteral(">\r\n                                    </div>\r\n                                    <div class=\"form-group col-sm-12\">\r\n                                        <label");
                    BeginWriteAttribute("for", " for=\"", 5986, "\"", 5992, 0);
                    EndWriteAttribute();
                    WriteLiteral(">Tên khu</label>\r\n                                        <input type=\"text\" class=\"form-control input-id\"\r\n                                               id=\"tenKhu\"");
                    BeginWriteAttribute("placeholder", "\r\n                                               placeholder=\"", 6159, "\"", 6221, 0);
                    EndWriteAttribute();
                    WriteLiteral(">\r\n                                    </div>\r\n                                    <div class=\'form-group col-sm-6\'>\r\n                                        <label");
                    BeginWriteAttribute("class", " class=\'", 6386, "\'", 6394, 0);
                    EndWriteAttribute();
                    WriteLiteral(">Giá trẻ em</label>\r\n                                        <input type=\"number\" class=\"form-control input-id\"\r\n                                               id=\"giaVeTreEm\"");
                    BeginWriteAttribute("placeholder", "\r\n                                               placeholder=\"", 6570, "\"", 6632, 0);
                    EndWriteAttribute();
                    WriteLiteral(">\r\n                                    </div>\r\n                                    <div class=\'form-group col-sm-6\'>\r\n                                        <label");
                    BeginWriteAttribute("class", " class=\'", 6797, "\'", 6805, 0);
                    EndWriteAttribute();
                    WriteLiteral(">Giá người lớn</label>\r\n                                        <input type=\"number\" class=\"form-control input-id\"\r\n                                               id=\"giaVeNguoiLon\"");
                    BeginWriteAttribute("placeholder", "\r\n                                               placeholder=\"", 6987, "\"", 7049, 0);
                    EndWriteAttribute();
                    WriteLiteral(@">
                                    </div>
                                    <input style=""display:none"" id=""hiddenSubmit"" type=""submit""
                                           class=""btn btn-default"" value=""Save changes"">
                                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            </div>
                            <div class=""modal-footer"">
                                <button type=""button"" class=""btn btn-default""
                                        data-dismiss=""modal"">
                                    Close
                                </button>
                                <button type=""button"" class=""btn btn-primary"" id=""btnUpdateItem""
                                        onclick=""addItem()"">
                                    Save
                                    changes
                                </button>
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>


    </div>




");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    $(document).ready(function () {
        setTimeout(function () { loadData(); }, 460);
    });
</script>

<script>
    var showItems = [""maKhu"", ""tenKhu"", ""mANVQL"", ""giaVeTreEm"", ""giaVeNguoiLon""];

    var dataSource = [];
    var updatingItemId = 0;
    var tableUpdating = 0;
    var table;
    var systemURL = ""https://localhost:44318/"";
    function loadData() {
        $.ajax({
            url: systemURL + ""khutrochoi/api/list"",
            type: ""GET"",
            contentType: ""application/json"",
            success: function (responseData) {
                debugger;
                var data = responseData.data;
                dataSource = data;
                data.forEach(function (item, index) {
                    // console.log(item, index);
                    var rowContent = """";
                    rowContent += ""<td style='text-align: center;'>"" + (index + 1) + ""</td>"";
                    for (var key in item) {
                        if (item.hasOw");
            WriteLiteral(@"nProperty(key)) {
                            // console.log(key + "" -> "" + item[key]);
                            if (showItems.includes(key)) {
                                if (key == ""photo"") {
                                    rowContent += ""<td class='row"" + item.id + ""-column column-"" + key + ""' property='"" + key + ""'><span style='color:red'><i class='fa fa-times' aria-hidden='true' style='font-size:1.5em'></i></span></td>"";

                                }
                                else {
                                    rowContent += ""<td class='row"" + item.id + ""-column column-"" + key + ""' property='"" + key + ""'>"" + item[key] + ""</td>"";
                                }
                            }
                        }
                    }
                    rowContent += ""<td style='text-align: center;'><a onclick='editItem("" + item.id + "")'><i class='fa fa-edit fa-2x' style='color:#03a9f4'></i></a></td>"";
                    rowContent += ""<td style='text-alig");
            WriteLiteral(@"n: center;'><a onclick='deleteItem("" + item.id + "")'><i class='fa fa-trash fa-2x' style='color:#e91e63'></i></a></td>"";

                    var newRow = ""<tr id='row"" + item.id + ""' >"" + rowContent + ""</tr>"";
                    $(newRow).appendTo($(""#tableData tbody""));

                    // $(""#tableData #dummyRow"").after(""<tr id='row""+item.id+""' >"" + rowContent + ""</tr>"");
                });

                //Init datatable
                if (tableUpdating === 0) {
                    initTablePage();
                }

                //update data with foreign key
                updateTable();
            },
            error: function (e) {
                //console.log(e.message);
                initTablePage();
            }
        });
    }

    function initTablePage() {
        table = $('#tableData').DataTable({
            aLengthMenu: [
                [-1, 10, 25, 50, 100, 200],
                ['Tất cả', 10, 25, 50, 100, 200]
            ],
            'or");
            WriteLiteral(@"der': [
                [1, 'desc']
            ],
            ""oLanguage"": {
                ""sUrl"": ""/js/Vietnamese.json""
            },
            ""initComplete"": function (settings, json) {
                table.on('order.dt search.dt', function () {
                    table.column(0, {
                        search: 'applied',
                        order: 'applied'
                    }).nodes().each(function (cell, i) {
                        cell.innerHTML = i + 1;
                    });
                }).draw();

                $('#tableData tfoot th').each(function () {
                    var title = $(this).text();
                    $(this).html(""<input type='text' class='tableFooterFilter' placeholder=' ' />"");
                });

                table.columns().every(function () {
                    var that = this;
                    $('input.tableFooterFilter', this.footer()).on('keyup change', function () {
                        if (that.search() !== thi");
            WriteLiteral(@"s.value) {
                            that.search(this.value).draw();
                        }
                    });
                });
            }
        });

        setTimeout(function () {
            table.page.len(18).draw();
        }, 1000);
    }
    $("".btn.btn-success"").click(function () {
        $("".modal-body"").toggle(""show"");
    });
    function editItem(id) {
        debugger;
        updatingItemID = id;
        $(""#modal-id"").modal('show');

        let obj = getItemByID(id);
        $(""#topicId"").val(id > 0 ? obj.id : """");
        $(""#topicActive"").val(id > 0 ? obj.active : """");
        $(""#topicName"").val(id > 0 ? obj.name : """");
        $(""#topicName2"").val(id > 0 ? obj.name2 : """");
        $(""#topicSlug"").val(id > 0 ? obj.slug : """");
        $(""#topicSlug2"").val(id > 0 ? obj.slug2 : """");
        $(""#topicColor"").val(id > 0 ? obj.color : """");
        $(""#topicPhoto"").val(id > 0 ? obj.photo : """");
        $(""#topicDescription"").val(id > 0 ? obj.descrip");
            WriteLiteral(@"tion : """");
        $(""#topicText"").val(id > 0 ? obj.text : """");
        $(""#topicDescription2"").val(id > 0 ? obj.description2 : """");
        $(""#topicText2"").val(id > 0 ? obj.text2 : """");
        $(""#topicCreatedTime"").val(id > 0 ? obj.createdTime : """");
        //topicTextEditor.setData((id > 0 ? obj.text : ''));
        //topicText2Editor.setData((id > 0 ? obj.text2 : ''));

        // $(""#topicId"").val(id > 0 ? obj.id : """");
        // $(""#topicName"").val(id > 0 ? obj.name : """");
        // $(""#topicDescription"").val(id > 0 ? obj.description : """");
        // $(""#topicCreatedTime"").val(id > 0 ? obj.createdTime : """");
        // $(""#topicActive"").val(id > 0 ? obj.active : """");

        if (id == 0) {
            $(""#topicActive"").val(1);
            $(""#topicCreatedTime"").val(new Date().toISOString().replace(/T/, ' ').replace(/\..+/, ''));
        }
        else {
            // correcting data
            //$('#buyProvinceID').val(obj.provinceID.split("", "")).trigger('change');

     ");
            WriteLiteral(@"   }
        //formatNumber();
    }
    function updateItem(id) {
        debugger;
        var actionName = (id == 0 ? ""Bạn muốn tạo mới"" : ""Cập nhật"");
        let obj = getItemByID(id);
        let objName = id > 0 ? obj.name : ""item"";

        validateInputNumber();

        // ""id"": $(""#topicId"").val(),
        // ""name"": $(""#topicName"").val(),
        // ""description"": $(""#topicDescription"").val(),
        // ""createdTime"": $(""#topicCreatedTime"").val(),
        // ""active"": $(""#topicActive"").val()
        var updatingObj = {
            ""maKhu"": $(""#maKhu"").val(),
            ""maNVQL"": $(""#maNVQL"").val(),
            ""tenKhu"": $(""#tenKhu"").val(),
            ""giaVeTreEm"": $(""#giaTreEm"").val(),
            ""giaVeNguoiLon"": $(""#giaNguoiLon"").val(),
        };

        // correcting data
        //updatingObj.provinceID = updatingObj.provinceID.join("", "");

        Swal.fire({
            title: 'Xác nhận thay đổi?',
            text: """" + actionName + "" \"""" + objName + ""\"""",");
            WriteLiteral(@"
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#443',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Huỷ'
        }).then((result) => {
            if (result.value) {
                $(""#modal-id"").modal('hide');

                //CALL AJAX TO UPDATE
                if (id > 0) {
                    $.ajax({
                        url: systemURL + ""khutrochoi/api/update"",
                        type: ""POST"",
                        contentType: ""application/json"",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === ""SUCCESS"") {
                                Swal.fire(
                                    'Thành Công!',
                                    'Đã cập nhật \""' + obj");
            WriteLiteral(@"Name + '\"" ',
                                    'success'
                                );
                                updateTable(id, updatingObj, ""update"");
                                var updatedItemIndex = dataSource.findIndex(item => parseInt(item.id) === id);
                                dataSource[updatedItemIndex] = updatingObj;
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                        }
                    });
                };

                //CALL AJAX TO CREATE
                if (id == 0) {
                    updatingObj.id = 1;
                    console.log(updatingObj);
                    $.ajax({
                  ");
            WriteLiteral(@"      url: systemURL + ""khutrochoi/api/add"",
                        type: ""POST"",
                        contentType: ""application/json"",
                        data: JSON.stringify(updatingObj),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 201 && responseData.message === ""CREATED"") {
                                Swal.fire(
                                    'Thành công!',
                                    'Đã cập nhật dữ liệu',
                                    'success'
                                );
                                updatingObj = responseData.data;
                                dataSource.push(updatingObj);
                                updateTable(0, updatingObj, ""add"");
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                    ");
            WriteLiteral(@"        Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                        }
                    });
                }
            }
        })
    }
    function getItemByID(id) {
        const result = dataSource.find(item => parseInt(item.id) === id);
        return result;
    }
    function updateTable(id, obj, action) {
        if (action === ""delete"") {
            table.row(""#row"" + id).remove().draw();
        }

        if (action === ""add"") {
            console.log(""Added:"" + obj);

            //var addedItems = [obj];
            var addedItems = obj;
            var addedValues = [];


            addedItems.forEach(function (item, index) {
                // console.log(item, index);
                var rowContent = """";
                addedValues.push(""<td style='text-align: center;'></td>"");
                for (var ");
            WriteLiteral(@"key in item) {
                    if (item.hasOwnProperty(key)) {
                        // console.log(key + "" -> "" + item[key]);
                        if (!hiddenItem.includes(key)) {
                            addedValues.push(""<td class='row"" + item.id + ""-column column-"" + key + ""' property='"" + key + ""'>"" + item[key] + ""</td>"");
                        }
                    }
                }

                addedValues.push(""<td style='text-align: center;'><a href='/postTopic/admin/list/"" + item.id + ""'><i class='fa fa-list fa-2x' style='color:#03a9f4'></i></a></td>"");
                addedValues.push(""<td style='text-align: center;'><a onclick='editItem("" + item.id + "")'><i class='fa fa-edit fa-2x' style='color:#03a9f4'></i></a></td>"");
                addedValues.push(""<td style='text-align: center;'><a onclick='deleteItem("" + item.id + "")'><i class='fa fa-trash fa-2x' style='color:#e91e63'></i></a></td>"");

                table.row.add(addedValues).draw();
            });
    ");
            WriteLiteral(@"        // location.reload();
        }

        if (action === ""update"") {
            // alert(id);
            $("".row"" + id + ""-column"").each(function () {
                var propertyName = $(this).attr(""property"");
                console.log(propertyName);

                for (var key in obj) {
                    if (key === propertyName && obj.hasOwnProperty(key)) {
                        this.innerText = obj[key];
                    }
                }

            });
        }

        //Update columns with foreign key
        // var NO_FKFKUpdateSelector = 'tr';
        // if( !(typeof(id) === 'undefined')) {
        //     NO_FKFKUpdateSelector = '#row'+id;
        // }
        // $('#tableData tbody '+NO_FKFKUpdateSelector+' td[property=NO_FKID]').each(function(){
        //     // debugger;
        //     var topicID = parseInt($(this).attr('class').replace('row','').replace('-column',''));
        //     var topicObj = getItemByID(topicID);
        //     var NO_");
            WriteLiteral(@"FKID = parseInt(topicObj.NO_FKID);
        //     var NO_FKObj = NO_FKData.find(item => parseInt(item.id) === NO_FKID);
        //     $(this).text(NO_FKObj.name);
        //     // console.log('FK updated for Staff '+topicID);
        // });


        //formatNumber();
    }


    function addItem() {
        var updatingObj = {
            ""maKhu"": $(""#maKhu"").val(),
            ""maNVQL"": $(""#maNVQL"").val(),
            ""tenKhu"": $(""#tenKhu"").val(),
            ""giaVeTreEm"": $(""#giaVeTreEm"").val(),
            ""giaVeNguoiLon"": $(""#giaVeNguoiLon"").val(),
        };
        $.ajax({
            url: systemURL + ""khutrochoi/api/add"",
            type: ""POST"",
            contentType: ""application/json"",
            data: JSON.stringify(updatingObj),
            success: function (responseData) {
                // debugger;
                if (responseData.status == 201 && responseData.message === ""CREATED"") {
                    Swal.fire(
                        'Thành công!',
  ");
            WriteLiteral(@"                      'Đã cập nhật dữ liệu',
                        'success'
                    );
                    updatingObj = responseData.data;
                    dataSource.push(updatingObj);
                    updateTable(0, updatingObj, ""add"");
                }
            },
            error: function (e) {
                //console.log(e.message);
                Swal.fire(
                    'Lỗi!',
                    'Đã xảy ra lỗi, vui lòng thử lại',
                    'error'
                );
            }
        });
    }

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
